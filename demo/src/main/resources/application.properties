
logging.level.com.gm.demo.*=DEBUG

#drop n create table again, good for testing, comment this in production

spring.cloud.stream.default-binder=kafka

spring.cloud.stream.kafka.default.producer.recordMetadataChannel=fileProcessMetadataChannel

spring.cloud.stream.bindings.customer-data-out.producer.error-channel-enabled=true
spring.cloud.stream.bindings.customer-data-out.destination=test-customer-data
spring.cloud.stream.bindings.customer-data-out.contentType=application/json

spring.cloud.stream.kafka.binder.brokers=localhost:9092
spring.cloud.stream.kafka.binder.autoCreateTopics=true

spring.cloud.stream.kafka.binder.requiredAcks=all
spring.cloud.stream.kafka.binder.producer-properties.retries=1
spring.cloud.stream.kafka.binder.producer-properties.delivery.timeout.ms=30000

#https://cloud.spring.io/spring-cloud-stream-binder-kafka/spring-cloud-stream-binder-kafka.html#_example_security_configuration
#spring.kafka.ssl.trust-store-type=JKS
#spring.kafka.ssl.trust-store-location=file:/home/ec2-user/keystore.jks
#spring.kafka.ssl.trust-store-password=test1234
#
#spring.cloud.stream.kafka.binder.brokers=localhost:9092
#spring.cloud.stream.kafka.binder.autoCreateTopics=false
#spring.cloud.stream.kafka.binder.configuration.security.protocol=SASL_SSL
#spring.cloud.stream.kafka.binder.configuration.sasl.kerberos.service.name=kafka
#spring.cloud.stream.kafka.binder.jaas.options.useKeyTab=true
#spring.cloud.stream.kafka.binder.jaas.options.storeKey=true
#spring.cloud.stream.kafka.binder.jaas.options.keyTab=/etc/security/keytabs/kafka_client.keytab
#spring.cloud.stream.kafka.binder.jaas.options.principal=kafka-client-1@EXAMPLE.COM


